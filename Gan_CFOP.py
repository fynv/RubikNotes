import glm
from RubikNotes import RubiksCube, PerspectiveView, TopView

cube = RubiksCube()

# cube.exec_seq("(R U'U' R' U) (R U'U' R' U) y'(R' U' R) y", reverse = True)
# cube.exec_seq("(U R U' R' U') y'(R' U R) y", reverse = True)
# cube.exec_seq("(R' F' RU)(R U' R' F)", reverse = True)
# cube.exec_seq("(R U R' U')(R U'U' R' U')(R U R')", reverse = True)
# cube.exec_seq("(R U' R U)y(R U' R' F2)y'", reverse = True)
# cube.exec_seq("y'(R' U' R U)(R' U' R)y", reverse = True)
# cube.exec_seq("(R U' R' U)(R U' R')", reverse = True)
# cube.exec_seq("(RU'R'U)(R U'U' R'U)(RU'R')", reverse = True)
# cube.exec_seq("R2 y(R U R' U')y'(R' U R')", reverse = True)
# cube.exec_seq("y' (R' U)(R U')(R' U R) y", reverse = True)
# cube.exec_seq("(R U R' U' )(R U R') ", reverse = True)
# cube.exec_seq("(R U R' U') (R U R' U') (R U R')", reverse = True)
# cube.exec_seq("(R U' R') y' (R' U2 R) y", reverse = True)
# cube.exec_seq("y' (R' U2)(R U R' U')R y", reverse = True)
# cube.exec_seq("y' U'(R' U2)(R U' R' U)R y", reverse = True)
# cube.exec_seq("y'(R' U R U'U')(R' U' R) y", reverse = True)
# cube.exec_seq("y' (U2 R2' U2)(R U R' U R2) y", reverse = True)
# cube.exec_seq("(R U R')U2(R U R' U')(R U R')", reverse = True)
# cube.exec_seq("(R U' R' U2)(R U R')", reverse = True)
# cube.exec_seq("U(R U'U')(R' U R U' )R'", reverse = True)
# cube.exec_seq("(R U'U')(R' U' R U)R'", reverse = True)
# cube.exec_seq("U'(R U')(R' U2)(R U' R')", reverse = True)
# cube.exec_seq("U'(RUR')U(F'U'F)", reverse = True)
# cube.exec_seq("d (R' U R U')(R' U' R) y", reverse = True)
# cube.exec_seq("y' (R' U' R) y", reverse = True)
# cube.exec_seq("(d R' U' R U')(R' U' R) y", reverse = True)
# cube.exec_seq("y' (R U'U')R'2 U' R2 U' R' y", reverse = True)
# cube.exec_seq("y' (R' U)(R d' U')(R U R') ", reverse = True)
# cube.exec_seq("U'(R U'U')(R'U2)(RU'R')", reverse = True)
# cube.exec_seq("U'(R U R' U')(R U'U' R')", reverse = True)
# cube.exec_seq("URU'R'", reverse = True)
# cube.exec_seq("U' (R U'U' R' U)(R U R')", reverse = True)
# cube.exec_seq("d (R' U' R) d' (R U R')", reverse = True)
# cube.exec_seq("y' U' (R' U R) y", reverse = True)
# cube.exec_seq("(d R' U' R U'U')(R' U R) y", reverse = True)
# cube.exec_seq("d (R' U2)(R U'U')(R' U R) y", reverse = True)
# cube.exec_seq("(R U' R' U)(d R' U' R) y", reverse = True)
# cube.exec_seq("(R'U2)(R2'U)(R2'UR)", reverse = True)
# cube.exec_seq("U'(R U R' U)(R U R')", reverse = True)
# cube.exec_seq("(R U R')", reverse = True)
# cube.exec_seq("U' (R U' R' U)(R U R')", reverse = True)

# cube.exec_seq("(R U'U')(R2' F R F')U2(R' F R F')", reverse = True)
# cube.exec_seq("(F R U R' U' F')(f R U R' U' f')", reverse = True)
# cube.exec_seq("f(RUR'U')f'U'F(RUR'U')F'", reverse = True)
# cube.exec_seq("f(RUR'U')yx(R'F)(RUR'U')F'", reverse = True)
# cube.exec_seq("(r' U2)(R U R'U) r", reverse = True)
# cube.exec_seq("(rU'U')(R'U'RU'r')", reverse = True)
# cube.exec_seq("rUR'URU'U'r'", reverse = True)
# cube.exec_seq("r'U'RU'R'U2r", reverse = True)
# cube.exec_seq("(R' U' R) y' x' (R U')(R'F)(R U R') x y", reverse = True)
# cube.exec_seq("(RUR'U)(R'FRF')(RU'U'R')", reverse = True)
# cube.exec_seq("r'(R2UR'U)(RU'U'R'U)(rR')", reverse = True)
# cube.exec_seq("(rR'2U'RU')(R'U2RU'R)r'", reverse = True)
# cube.exec_seq("(rU'r'U')(rUr')(F'UF)", reverse = True)
# cube.exec_seq("R' F R U R' F'R (F U' F')", reverse = True)
# cube.exec_seq("(r' U' r)(R'U'R U)(r' U r)", reverse = True)
# cube.exec_seq("(r U r')(R U R' U')(r U' r')", reverse = True)
# cube.exec_seq("(R U R' U)(R' F R F'U2)R' F R F'", reverse = True)
# cube.exec_seq("F (R U R' d)(R' U2)(R' F R F')", reverse = True)
# cube.exec_seq("R' U2 F R U R'U' y'R2 U'U' R B", reverse = True)
# cube.exec_seq("r'(R U)(R U R'U' r2)(R2'U) (R U') r'", reverse = True)
# cube.exec_seq("(R U'U')(R' U' R U R' U') (R U' R')", reverse = True)
# cube.exec_seq("R U'U' (R'2 U')(R2 U')R'2 U' U'R", reverse = True)
# cube.exec_seq("(R2 D') (R U'U') (R' D) (R U'U' R)", reverse = True)
# cube.exec_seq("x' R U R' z'(R U)(L' U' R') x", reverse = True)
# cube.exec_seq("F'(rUR'U')(r'FR)", reverse = True)
# cube.exec_seq("R U'U' R' U'R U' R'", reverse = True)
# cube.exec_seq("R' U2 R U R' U R", reverse = True)
# cube.exec_seq("(r U R' U')(r' R U)(R U' R')", reverse = True)
# cube.exec_seq("(R U R' U')(R U' R' F' U' F)(R U R')", reverse = True)
# cube.exec_seq("(R2 U R' B')(RU')(R2' U)(R B R')", reverse = True)
# cube.exec_seq("(r'F'UF)(LF'L'U'r)", reverse = True)
# cube.exec_seq("(RU)(B'U')(R'URBR')", reverse = True)
# cube.exec_seq("(R U R' U')(R' F R F')", reverse = True)
# cube.exec_seq("(R'U'R U) x' z'(R U)(L'U')r R'", reverse = True)
# cube.exec_seq("R U'U'R2' F R F'(R U'U'R')", reverse = True)
# cube.exec_seq("R'U'R U' R'U R U l U'R'U x", reverse = True)
# cube.exec_seq("F (R U' R'U'R U) (R' F')", reverse = True)
# cube.exec_seq("(R U R'U)(RU'R'U')(R'F R F')", reverse = True)
# cube.exec_seq("(r U' r' U' r)y(R U R' f')", reverse = True)
# cube.exec_seq("(R' F R U R'U')(F' U R)", reverse = True)
# cube.exec_seq("RU'R'U2RUyRU'R'U'F'", reverse = True)
# cube.exec_seq("(R'U2)(R U R' U R2)y(R U R' U')F'", reverse = True)
# cube.exec_seq("(B' U')(R' U R B)", reverse = True)
# cube.exec_seq("f (R U R' U')f'", reverse = True)
# cube.exec_seq("F(RUR'U')F'", reverse = True)
# cube.exec_seq("(R' U') R' F R F' (U R)", reverse = True)
# cube.exec_seq("B'(R' U' R U) (R' U' R U) B", reverse = True)
# cube.exec_seq("F (R U R' U') (R U R' U') F'", reverse = True)
# cube.exec_seq("R B'(R2 F)(R2 B) R2 F' R", reverse = True)
# cube.exec_seq("L'B (L2 F')(L2B')L2 F L'", reverse = True)
# cube.exec_seq("f (R U R' U') (R U R' U') f'", reverse = True)
# cube.exec_seq("R'U' R U' R' d R' U l U x", reverse = True)
# cube.exec_seq("(r' U2)(R U R'U')(R U R'U) r ", reverse = True)
# cube.exec_seq("(r U'U')(R' U' R U R' U')(R U' r')", reverse = True)
# cube.exec_seq("(R U'U') (R'2 U') R U' R'U2 (F R F')", reverse = True)
# cube.exec_seq("F (R U R'U')(R F')(r U R'U')r'", reverse = True)
# cube.exec_seq("(R U R' U' r)(R' U)(R U' r')", reverse = True)

# cube.exec_seq("(R U' R)(U R U R)(U' R' U' R2)", reverse = True)
# cube.exec_seq("(R2' U)(R U R' U')(R' U')(R' U R')", reverse = True)
# cube.exec_seq("L2(l'2 U)L2(l'2 U2)L2(l'2 U)L2 l2", reverse = True)
# cube.exec_seq("(U R'U')(R U'R)(U R U')(R'U R U)(R2 U')(R'U)", reverse = True)
# cube.exec_seq("x' R2 D2(R' U' R)D2(R' U R') x", reverse = True)
# cube.exec_seq("(l U' R)D2(R' U R)D2 R2 x", reverse = True)
# cube.exec_seq("x'(R U' R' D)(R U R')u2'(R' U R)D(R' U' R) x' y2", reverse = True)
# cube.exec_seq("(R U R' U')(R' F)(R2 U' R' U')(R U R' F')", reverse = True)
# cube.exec_seq("U'(R'U R U' R'2 b')x(R'U R)y'(R U R' U' R2) x'", reverse = True)
# cube.exec_seq("(R' U R' U')yx2(R' U R' U'R2)xz'(R'U'R U R) x", reverse = True)
# cube.exec_seq("F(R U'R' U')(R U R' F')(R U R' U')(R' F R F')", reverse = True)
# cube.exec_seq("z(U'RD')(R2UR'U'R2U)z'(RU')", reverse = True)
# cube.exec_seq("(R U R'F')(R U R'U')(R'F R2 U'R'U')", reverse = True)
# cube.exec_seq("(R' U2)(R U'U')(R' F R U R' U')(R'F' R2 U')", reverse = True)
# cube.exec_seq("(R U'U')(R' U2)(R B' R' U')(R U R B R2' U)", reverse = True)
# cube.exec_seq(" (R'2 u' R U' R)(U R' u)(R2 f R' f')", reverse = True)
# cube.exec_seq("(R U R')y'(R2' u' R U')(R' U R' u R2) y", reverse = True)
# cube.exec_seq("(R2 u)(R' U R' U')(R u') (R2' F' U F)", reverse = True)
# cube.exec_seq("(R' d' F)(R2 u)(R' U)(R U' R u' R2) y'", reverse = True)
# cube.exec_seq("z(R' U R')z'(R U2 L' U R') z(U R')z'(R U2 L' U R')", reverse = True)
cube.exec_seq("z(U'R D')(R2 U R'U')z'(R U R')z(R2 U R')z'(R U')", reverse = True)

p_view = PerspectiveView()
p_view.set_camera(256, 256, 45, glm.lookAt(glm.vec3(8.0,6.0,10.0), glm.vec3(0.0,-0.5,0.0), glm.vec3(0.0, 1.0, 0.0)))
p_view.render(cube, 'perspective.png')

t_view = TopView()
t_view.set_size(256)
t_view.render(cube, 'top.png')



